/* tslint:disable */
/* eslint-disable */
/**
 * Tilled API
 * The Tilled API is organized around [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer). Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs.  Tilled’s API has two public environments, `sandbox` and `production`. The former does not affect live data or interact with banking networks. Prior to certification completion, only `sandbox` is available.  Authentication uses a standard web token schema.  **Notice**: Tilled’s API uses HTTP status `401` for `Unauthenticated` (not `Unauthorized`). Requests for unauthorized materials will receive a `403: Forbidden` response. [Learn more about error codes >](https://docs.tilled.com/docs/resources/error-codes)  ## Authentication  Tilled’s API uses API keys for authentication, which can be managed in the Tilled Dashboard. Keys created in the sandbox environment will not work in production nor will production credentials work in the sandbox.  Restricted API keys can provide granular permissions.  Keep your API keys secure and do not share them publicly, such as on GitHub or in client-side code. Authentication is done via the custom HTTP header `tilled-api-key`, with your API key as the value. All requests must be over HTTPS; HTTP requests will fail, as will unauthenticated requests.  ## JWT  Create a JSON Web Token (JWT) using our [Login endpoint](https://docs.tilled.com/api-reference#tag/users/post/v1/auth/login). Use the format: Bearer <JWT>. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: integrations@tilled.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


// May contain unused imports in some cases
// @ts-ignore
import type { GlobalDashboardSettings } from './global-dashboard-settings';
// May contain unused imports in some cases
// @ts-ignore
import type { GlobalEmailSettings } from './global-email-settings';

/**
 * 
 * @export
 * @interface AccountSettingsBranding
 */
export interface AccountSettingsBranding {
    /**
     * Time at which the object was created.
     * @type {string}
     * @memberof AccountSettingsBranding
     */
    'created_at': string;
    /**
     * 
     * @type {any}
     * @memberof AccountSettingsBranding
     */
    'dark_mode_logo': any;
    /**
     * Turn on or off dashboard preferences for all merchants by default. These settings can not be overridden by individual merchants, and are set by the partner. Defaults to true for all types.
     * @type {GlobalDashboardSettings}
     * @memberof AccountSettingsBranding
     */
    'global_dashboard_settings': GlobalDashboardSettings;
    /**
     * Turn on or off email notifications for all merchants by default. Individual merchants can override these settings later. Defaults to true.
     * @type {boolean}
     * @memberof AccountSettingsBranding
     * @deprecated
     */
    'global_email_notifications': boolean;
    /**
     * Turn on or off email notifications for different email types, for direct children accounts, by default. Individual accounts can override these settings later. Defaults to true for all types.
     * @type {GlobalEmailSettings}
     * @memberof AccountSettingsBranding
     */
    'global_email_settings': GlobalEmailSettings;
    /**
     * 
     * @type {any}
     * @memberof AccountSettingsBranding
     */
    'logo': any;
    /**
     * Time at which the object was last updated.
     * @type {string}
     * @memberof AccountSettingsBranding
     */
    'updated_at': string;
    /**
     * Optional customized Support Center title
     * @type {string}
     * @memberof AccountSettingsBranding
     */
    'merchant_support_center_name'?: string;
    /**
     * Optional customized Support Center URL
     * @type {string}
     * @memberof AccountSettingsBranding
     */
    'merchant_support_center_url'?: string;
    /**
     * The primary hexadecimal color value.
     * @type {string}
     * @memberof AccountSettingsBranding
     */
    'primary_color'?: string;
    /**
     * The secondary hexadecimal color value.
     * @type {string}
     * @memberof AccountSettingsBranding
     */
    'secondary_color'?: string;
    /**
     * Partner\'s support email address
     * @type {string}
     * @memberof AccountSettingsBranding
     */
    'support_email'?: string;
    /**
     * Partner\'s support phone number
     * @type {string}
     * @memberof AccountSettingsBranding
     */
    'support_phone'?: string;
}

